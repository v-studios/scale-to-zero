# Based on, but removing PrivateSubnets and NATGW to save cost.
# https://docs.aws.amazon.com/codebuild/latest/userguide/cloudformation-vpc-template.html
#
# aws cloudformation deploy --template-file vpc.yaml --stack-name wagtail-apprunner-vpc

Description: This template deploys a VPC, with a pair of public
  subnets spread across two Availability Zones. It deploys an internet
  gateway, with a default route on the public subnets. It creates a
  no-ingres security group we can reference for AppRunner to reach the
  VPC.

Parameters:
  VpcCIDR:
    Type: String
    Default: 10.192.0.0/16
  PublicSubnet1CIDR:
    Type: String
    Default: 10.192.10.0/24
  PublicSubnet2CIDR:
    Type: String
    Default: 10.192.11.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Subnet (AZ1)

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Subnet (AZ2)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  SecurityGroupAppRunner:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-apprunner-sg"
      GroupDescription: "Security group marking the apprunner instance"
      VpcId: !Ref VPC

  SecurityGroupDb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${AWS::StackName}-db-sg"
      GroupDescription: "Security group on DB allowing apprunner access"
      SecurityGroupIngress:
        - IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt SecurityGroupAppRunner.GroupId
          FromPort: 5432
          ToPort: 5432
      VpcId: !Ref VPC

Outputs:
  VpcId:
    Description: A reference to the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

  PublicSubnet1:
    Description: A reference to the public subnet in the 1st Availability Zone
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet1"

  PublicSubnet2:
    Description: A reference to the public subnet in the 2nd Availability Zone
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnet2"

  SecurityGroupAppRunner:
    Description: Security group to be applied to mark AppRunnerwith
    Value: !Ref SecurityGroupAppRunner
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupAppRunner"

  SecurityGroupDb:
    Description: Security group to be applied to DB to allow AppRunner access
    Value: !Ref SecurityGroupDb
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupDb"
